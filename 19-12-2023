import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'pageCount' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER p
     */

    public static int pageCount(int n, int p) {
    // Write your code here
    int count =0;
        if(p == 1 || p == n){
            return 0;
        }else if(p == n-1){
            if(n%2 == 0)
                return 1;
            else
                return 0;
        }else{
            if(p < n/2){
                for(int i =1;i<n/2;i++){
                    if(p == i){
                       break;
                    }
                    if(i%2 != 0)
                    count++;   
                }
                return count;
            }else if(p>n/2){
                for(int i = n;i>n/2;i--){
                    if(p == i){
                       break;
                    }
                    if(i%2 == 0)
                    count++;
                }
                return count;
            }else{
                int half = n/2;
               
                 return half/2;
                
            }
        }
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        int p = Integer.parseInt(bufferedReader.readLine().trim());

        int result = Result.pageCount(n, p);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
